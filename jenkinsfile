pipeline {
    agent any

    environment {
        registryCredentials = "nexus"
        registry = "192.168.13.130:8083"
    }

    stages {
    stage('Clean NPM Cache') {
            steps {
                script {
                    // Nettoyer le cache npm avant d'installer les dépendances
                    sh 'npm cache clean --force'
                }
            }
        }

        stage('Install dependencies') {
            steps {
                script {
                    // Installer les dépendances en utilisant npm
                    sh 'npm install --legacy-peer-deps' // Ignorer les conflits de pairs
                }
            }
        }

        stage('Unit Test') {
            steps {
                script {
                    // Perform unit tests
                    // Placeholder for actual unit test commands
                    currentBuild.result = 'SUCCESS'
                }
            }
        }
     
        stage('Deploy to Nexus') {
            steps {
                script {
                    // Deploy artifacts to Nexus repository manager
                    // Placeholder for actual deployment commands
                    currentBuild.result = 'SUCCESS'
                }
            }
        }

        stage('Building images (node and mongo)') {
            steps {
                script {
                    sh('docker-compose build')
                }
            }
        }
        stage('SonarQube Analysis') {
            steps {
                script {
                    def scannerHome = tool 'scanner'
                    withSonarQubeEnv {
                        sh "${scannerHome}/bin/sonar-scanner"
                    }
                }
            }
        }

        stage('Push Docker Image to Nexus') {
            steps {
                script {
                    docker.withRegistry("http://${registry}", registryCredentials) {
                        sh('docker push ${registry}/nodemongoapp:5.0')
                    }
                }
            }
        }
    }

    post {
        success {
            echo 'Build successful!'
        }
        failure {
            echo 'Build failed!'
        }
    }
}
